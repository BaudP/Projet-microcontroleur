Microchip MPLAB XC8 Compiler V2.00 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.00\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Final.X.production.sym \
  --cmf=dist/default/production\Final.X.production.cmf -z -Q18F4550 \
  -oC:\Users\myssc\AppData\Local\Temp\smgk.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Final.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=012Eh-07ffh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\myssc\AppData\Local\Temp\smgk.o \
  dist/default/production\Final.X.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\myssc\AppData\Local\Temp\smgk.o
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\Final.X.production.o
                mediumconst                        7314     7314      CEC     398A       0
                text47                             4856     4856        E     242B       0
                text46                             4864     4864        E     2432       0
                text45                             6A84     6A84      420     3542       0
                text44                             5CFE     5CFE      168     2E7F       0
                text43                             636E     636E      1DC     31B7       0
                text42                             495E     495E       3A     24AF       0
                text41                             5148     5148       B8     28A4       0
                text40                             4CFE     4CFE       70     267F       0
                text39                             5BB2     5BB2      14C     2DD9       0
                text38                             5A7E     5A7E      134     2D3F       0
                text37                             4F36     4F36       AA     279B       0
                text36                             4998     4998       3E     24CC       0
                text35                             5888     5888       EC     2C44       0
                text34                             4928     4928       36     2494       0
                text33                             55EE     55EE       DA     2AF7       0
                text32                             4E90     4E90       A6     2748       0
                text31                             57A6     57A6       E2     2BD3       0
                text30                             4A58     4A58       4A     252C       0
                text29                             5442     5442       D6     2A21       0
                text28                             4DF0     4DF0       A0     26F8       0
                text27                             4AEE     4AEE       50     2577       0
                text26                             484A     484A        C     2425       0
                text25                             5200     5200       BA     2900       0
                text24                             5FF2     5FF2      1B0     2FF9       0
                text23                             5E66     5E66      18C     2F33       0
                text22                             4A14     4A14       44     250A       0
                text21                             4848     4848        2     2424       0
                text20                             56C8     56C8       DE     2B64       0
                text19                             4AA2     4AA2       4C     2551       0
                text18                             4B3E     4B3E       52     259F       0
                text17                             5518     5518       D6     2A8C       0
                text16                             6766     6766      31E     33B3       0
                text15                             61A2     61A2      1CC     30D1       0
                text14                             4C98     4C98       66     264C       0
                text13                             4C3A     4C3A       5E     261D       0
                text12                             4D6E     4D6E       82     26B7       0
                text11                             52BA     52BA       C4     295D       0
                text10                             49D6     49D6       3E     24EB       0
                text9                              48A4     48A4       26     2452       0
                text8                              654A     654A      21C     32A5       0
                text7                              4FE0     4FE0       B4     27F0       0
                text6                              5094     5094       B4     284A       0
                text5                              5974     5974      10A     2CBA       0
                text4                              537E     537E       C4     29BF       0
                text3                              4880     4880       24     2440       0
                text2                              48F8     48F8       30     247C       0
                text1                              4B90     4B90       54     25C8       0
                text0                              6EA4     6EA4      470     3752       0
                cstackCOMRAM                          1        1       5F        1       1
                cstackBANK0                          60       60       5C       60       1
                dataBANK1                           100      100       2E      100       1
                dataBANK0                            E8       E8        E       60       1
                bssBANK0                             BC       BC       2C       60       1
                cinit                              4BE4     4BE4       56     25F2       0
                nvBANK0                              F6       F6        8       60       1
                idataBANK1                         48CA     48CA       2E     48CA       0
                idataBANK0                         4872     4872        E     4872       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text47                             4856     4856        E         0
                text46                             4864     4864        E         0
                text45                             6A84     6A84      420         0
                text44                             5CFE     5CFE      168         0
                text43                             636E     636E      1DC         0
                text42                             495E     495E       3A         0
                text41                             5148     5148       B8         0
                text40                             4CFE     4CFE       70         0
                text39                             5BB2     5BB2      14C         0
                text38                             5A7E     5A7E      134         0
                text37                             4F36     4F36       AA         0
                text36                             4998     4998       3E         0
                text35                             5888     5888       EC         0
                text34                             4928     4928       36         0
                text33                             55EE     55EE       DA         0
                text32                             4E90     4E90       A6         0
                text31                             57A6     57A6       E2         0
                text30                             4A58     4A58       4A         0
                text29                             5442     5442       D6         0
                text28                             4DF0     4DF0       A0         0
                text27                             4AEE     4AEE       50         0
                text26                             484A     484A        C         0
                text25                             5200     5200       BA         0
                text24                             5FF2     5FF2      1B0         0
                text23                             5E66     5E66      18C         0
                text22                             4A14     4A14       44         0
                text21                             4848     4848        2         0
                text20                             56C8     56C8       DE         0
                text19                             4AA2     4AA2       4C         0
                text18                             4B3E     4B3E       52         0
                text17                             5518     5518       D6         0
                text16                             6766     6766      31E         0
                text15                             61A2     61A2      1CC         0
                text14                             4C98     4C98       66         0
                text13                             4C3A     4C3A       5E         0
                text12                             4D6E     4D6E       82         0
                text11                             52BA     52BA       C4         0
                text10                             49D6     49D6       3E         0
                text9                              48A4     48A4       26         0
                text8                              654A     654A      21C         0
                text7                              4FE0     4FE0       B4         0
                text6                              5094     5094       B4         0
                text5                              5974     5974      10A         0
                text4                              537E     537E       C4         0
                text3                              4880     4880       24         0
                text2                              48F8     48F8       30         0
                text1                              4B90     4B90       54         0
                text0                              6EA4     6EA4      470         0
                cinit                              4BE4     4BE4       56         0
                idataBANK1                         48CA     48CA       2E         0
                idataBANK0                         4872     4872        E         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    
                mediumconst                        7314     7314      CEC         0

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       5F         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       5C         1
                dataBANK0                            E8       E8        E         1
                bssBANK0                             BC       BC       2C         1
                nvBANK0                              F6       F6        8         1

        CLASS   BANK1          
                dataBANK1                           100      100       2E         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005F  000060         1       1  COMRAM  
                cstackBANK0                    000060  00009E  0000FE        60       1  BANK0   
                dataBANK1                      000100  00002E  00012E       100       1  BANK1   
                text21                         004848  000002  00484A      2424       0  CODE    
                text26                         00484A  00000C  004856      2425       0  CODE    
                text47                         004856  00000E  004864      242B       0  CODE    
                text46                         004864  00000E  004872      2432       0  CODE    
                idataBANK0                     004872  00000E  004880      4872       0  CODE    
                text3                          004880  000024  0048A4      2440       0  CODE    
                text9                          0048A4  000026  0048CA      2452       0  CODE    
                idataBANK1                     0048CA  00002E  0048F8      48CA       0  CODE    
                text2                          0048F8  000030  004928      247C       0  CODE    
                text34                         004928  000036  00495E      2494       0  CODE    
                text42                         00495E  00003A  004998      24AF       0  CODE    
                text36                         004998  00003E  0049D6      24CC       0  CODE    
                text10                         0049D6  00003E  004A14      24EB       0  CODE    
                text22                         004A14  000044  004A58      250A       0  CODE    
                text30                         004A58  00004A  004AA2      252C       0  CODE    
                text19                         004AA2  00004C  004AEE      2551       0  CODE    
                text27                         004AEE  000050  004B3E      2577       0  CODE    
                text18                         004B3E  000052  004B90      259F       0  CODE    
                text1                          004B90  000054  004BE4      25C8       0  CODE    
                cinit                          004BE4  000056  004C3A      25F2       0  CODE    
                text13                         004C3A  00005E  004C98      261D       0  CODE    
                text14                         004C98  000066  004CFE      264C       0  CODE    
                text40                         004CFE  000070  004D6E      267F       0  CODE    
                text12                         004D6E  000082  004DF0      26B7       0  CODE    
                text28                         004DF0  0000A0  004E90      26F8       0  CODE    
                text32                         004E90  0000A6  004F36      2748       0  CODE    
                text37                         004F36  0000AA  004FE0      279B       0  CODE    
                text7                          004FE0  0000B4  005094      27F0       0  CODE    
                text6                          005094  0000B4  005148      284A       0  CODE    
                text41                         005148  0000B8  005200      28A4       0  CODE    
                text25                         005200  0000BA  0052BA      2900       0  CODE    
                text11                         0052BA  0000C4  00537E      295D       0  CODE    
                text4                          00537E  0000C4  005442      29BF       0  CODE    
                text29                         005442  0000D6  005518      2A21       0  CODE    
                text17                         005518  0000D6  0055EE      2A8C       0  CODE    
                text33                         0055EE  0000DA  0056C8      2AF7       0  CODE    
                text20                         0056C8  0000DE  0057A6      2B64       0  CODE    
                text31                         0057A6  0000E2  005888      2BD3       0  CODE    
                text35                         005888  0000EC  005974      2C44       0  CODE    
                text5                          005974  00010A  005A7E      2CBA       0  CODE    
                text38                         005A7E  000134  005BB2      2D3F       0  CODE    
                text39                         005BB2  00014C  005CFE      2DD9       0  CODE    
                text44                         005CFE  000168  005E66      2E7F       0  CODE    
                text23                         005E66  00018C  005FF2      2F33       0  CODE    
                text24                         005FF2  0001B0  0061A2      2FF9       0  CODE    
                text15                         0061A2  0001CC  00636E      30D1       0  CODE    
                text43                         00636E  0001DC  00654A      31B7       0  CODE    
                text8                          00654A  00021C  006766      32A5       0  CODE    
                text16                         006766  00031E  006A84      33B3       0  CODE    
                text45                         006A84  000420  006EA4      3542       0  CODE    
                text0                          006EA4  000470  007314      3752       0  CODE    
                mediumconst                    007314  000CEC  008000      398A       0  MEDIUMCO
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000FE-0000FF                2
        BANK1            00012E-0001FF               D2
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           0000FE-0000FF                2
                         00012E-0007FF              6D2
        CODE             000004-004847             4844
        CONST            000004-004847             4844
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000800-004847             4048
        RAM              0000FE-0000FF                2
                         00012E-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000800-004847              100
        STACK            00012E-0007FF              6D2

                                  Symbol Table

?___aodiv                     cstackCOMRAM 000001
?___aomod                     cstackCOMRAM 000001
?___awdiv                     cstackCOMRAM 000001
?___fldiv                     cstackCOMRAM 00000F
?___omul                      cstackCOMRAM 000001
?___xxtofl                    cstackCOMRAM 000001
?_abs                         cstackCOMRAM 000013
?_dtoa                        cstackCOMRAM 00001C
?_isBallCatch                 cstackBANK0  000076
?_move                        cstackCOMRAM 000030
?_pad                         cstackCOMRAM 000011
?_rand                        cstackCOMRAM 000019
?_sprintf                     cstackCOMRAM 000058
?_strlen                      cstackCOMRAM 000001
?_time                        cstackCOMRAM 000001
?_vfpfcnvrt                   cstackCOMRAM 000040
?_vfprintf                    cstackCOMRAM 000050
Play_Music@delay              cstackCOMRAM 000009
Play_Music@i                  cstackCOMRAM 00000D
Play_Music@j                  cstackCOMRAM 00000B
Play_Music@r                  cstackCOMRAM 000005
Play_Music@size               cstackCOMRAM 000007
Play_Music@tab                cstackCOMRAM 000003
_ADCON0                       (abs)        000FC2
_ADCON1                       (abs)        000FC1
_CCP1CON                      (abs)        000FBD
_CCPR1L                       (abs)        000FBE
_Font3x6                      mediumconst  007F15
_Font8x8                      mediumconst  007315
_LATBbits                     (abs)        000F8A
_LATC0                        (abs)        007C58
_LATC7                        (abs)        007C5F
_LATD                         (abs)        000F8C
_OSCCON                       (abs)        000FD3
_PORTA                        (abs)        000F80
_PORTB                        (abs)        000F81
_PORTC                        (abs)        000F82
_PORTCbits                    (abs)        000F82
_PORTD                        (abs)        000F83
_PORTE                        (abs)        000F84
_PR2                          (abs)        000FCB
_Play_Music                   text25       005200
_T1CON                        (abs)        000FCD
_T1CONbits                    (abs)        000FCD
_T2CON                        (abs)        000FCA
_T3CON                        (abs)        000FB1
_T3CONbits                    (abs)        000FB1
_TMR1                         (abs)        000FCE
_TMR1IF                       (abs)        007CF0
_TMR2                         (abs)        000FCC
_TMR2IE                       (abs)        007CE9
_TMR2IF                       (abs)        007CF1
_TMR3                         (abs)        000FB2
_TMR3IF                       (abs)        007D09
_TRISA                        (abs)        000F92
_TRISB                        (abs)        000F93
_TRISC                        (abs)        000F94
_TRISC2                       (abs)        007CA2
_TRISCbits                    (abs)        000F94
_TRISD                        (abs)        000F95
_TRISE                        (abs)        000F96
_Trigger_Pulse_10us1          text47       004856
_Trigger_Pulse_10us2          text46       004864
__CFG_BOR$ON                  (abs)        000000
__CFG_DEBUG$ON                (abs)        000000
__CFG_FOSC$HS                 (abs)        000000
__CFG_LVP$OFF                 (abs)        000000
__CFG_PWRT$OFF                (abs)        000000
__CFG_WDT$OFF                 (abs)        000000
__HRAM                        (abs)        000000
__Habs1                       abs1         000000
__Hbank0                      bank0        000000
__Hbank1                      bank1        000000
__Hbank2                      bank2        000000
__Hbank3                      bank3        000000
__Hbank4                      bank4        000000
__Hbank5                      bank5        000000
__Hbank6                      bank6        000000
__Hbank7                      bank7        000000
__Hbigbss                     bigbss       000000
__Hbigdata                    bigdata      000000
__Hbigram                     bigram       000000
__Hbss                        bss          000000
__HbssBANK0                   bssBANK0     000000
__Hcinit                      cinit        000000
__Hclrtext                    clrtext      000000
__Hcomram                     comram       000000
__Hconfig                     config       30000E
__Hconst                      const        000000
__HcstackBANK0                cstackBANK0  000000
__HcstackCOMRAM               cstackCOMRAM 000000
__Hdata                       data         000000
__HdataBANK0                  dataBANK0    000000
__HdataBANK1                  dataBANK1    000000
__Heeprom_data                eeprom_data  000000
__Hfarbss                     farbss       000000
__Hfardata                    fardata      000000
__Hibigdata                   ibigdata     000000
__Hidata                      idata        000000
__HidataBANK0                 idataBANK0   000000
__HidataBANK1                 idataBANK1   000000
__Hidloc                      idloc        200008
__Hifardata                   ifardata     000000
__Hinit                       init         000004
__Hintcode                    intcode      000000
__Hintcode_body               intcode_body 000000
__Hintcodelo                  intcodelo    000000
__Hintentry                   intentry     000000
__Hintret                     intret       000000
__Hintsave_regs               intsave_regs 000000
__Hirdata                     irdata       000000
__Hmediumconst                mediumconst  008000
__HnvBANK0                    nvBANK0      000000
__HnvFARRAM                   nvFARRAM     000000
__Hnvbit                      nvbit        000000
__Hnvrram                     nvrram       000000
__Hparam                      rparam       000000
__Hpowerup                    powerup      000000
__Hram                        ram          000000
__Hramtop                     ramtop       000800
__Hrbit                       rbit         000000
__Hrbss                       rbss         000000
__Hrdata                      rdata        000000
__Hreset_vec                  reset_vec    000000
__Hrparam                     rparam       000000
__Hsfr                        sfr          000000
__Hsmallconst                 smallconst   000000
__Hspace_0                    (abs)        30000E
__Hspace_1                    (abs)        00012E
__Hspace_2                    (abs)        000000
__Hstack                      stack        000000
__Hstruct                     struct       000000
__Htemp                       temp         000000
__Htext                       text         000000
__Htext0                      text0        000000
__Htext1                      text1        000000
__Htext10                     text10       000000
__Htext11                     text11       000000
__Htext12                     text12       000000
__Htext13                     text13       000000
__Htext14                     text14       000000
__Htext15                     text15       000000
__Htext16                     text16       000000
__Htext17                     text17       000000
__Htext18                     text18       000000
__Htext19                     text19       000000
__Htext2                      text2        000000
__Htext20                     text20       000000
__Htext21                     text21       000000
__Htext22                     text22       000000
__Htext23                     text23       000000
__Htext24                     text24       000000
__Htext25                     text25       000000
__Htext26                     text26       000000
__Htext27                     text27       000000
__Htext28                     text28       000000
__Htext29                     text29       000000
__Htext3                      text3        000000
__Htext30                     text30       000000
__Htext31                     text31       000000
__Htext32                     text32       000000
__Htext33                     text33       000000
__Htext34                     text34       000000
__Htext35                     text35       000000
__Htext36                     text36       000000
__Htext37                     text37       000000
__Htext38                     text38       000000
__Htext39                     text39       000000
__Htext4                      text4        000000
__Htext40                     text40       000000
__Htext41                     text41       000000
__Htext42                     text42       000000
__Htext43                     text43       000000
__Htext44                     text44       000000
__Htext45                     text45       000000
__Htext46                     text46       000000
__Htext47                     text47       000000
__Htext5                      text5        000000
__Htext6                      text6        000000
__Htext7                      text7        000000
__Htext8                      text8        000000
__Htext9                      text9        000000
__LRAM                        (abs)        000001
__Labs1                       abs1         000000
__Lbank0                      bank0        000000
__Lbank1                      bank1        000000
__Lbank2                      bank2        000000
__Lbank3                      bank3        000000
__Lbank4                      bank4        000000
__Lbank5                      bank5        000000
__Lbank6                      bank6        000000
__Lbank7                      bank7        000000
__Lbigbss                     bigbss       000000
__Lbigdata                    bigdata      000000
__Lbigram                     bigram       000000
__Lbss                        bss          000000
__LbssBANK0                   bssBANK0     000000
__Lcinit                      cinit        000000
__Lclrtext                    clrtext      000000
__Lcomram                     comram       000000
__Lconfig                     config       300000
__Lconst                      const        000000
__LcstackBANK0                cstackBANK0  000000
__LcstackCOMRAM               cstackCOMRAM 000000
__Ldata                       data         000000
__LdataBANK0                  dataBANK0    000000
__LdataBANK1                  dataBANK1    000000
__Leeprom_data                eeprom_data  000000
__Lfarbss                     farbss       000000
__Lfardata                    fardata      000000
__Libigdata                   ibigdata     000000
__Lidata                      idata        000000
__LidataBANK0                 idataBANK0   000000
__LidataBANK1                 idataBANK1   000000
__Lidloc                      idloc        200000
__Lifardata                   ifardata     000000
__Linit                       init         000000
__Lintcode                    intcode      000000
__Lintcode_body               intcode_body 000000
__Lintcodelo                  intcodelo    000000
__Lintentry                   intentry     000000
__Lintret                     intret       000000
__Lintsave_regs               intsave_regs 000000
__Lirdata                     irdata       000000
__Lmediumconst                mediumconst  007314
__LnvBANK0                    nvBANK0      000000
__LnvFARRAM                   nvFARRAM     000000
__Lnvbit                      nvbit        000000
__Lnvrram                     nvrram       000000
__Lparam                      rparam       000000
__Lpowerup                    powerup      000000
__Lram                        ram          000000
__Lramtop                     ramtop       000800
__Lrbit                       rbit         000000
__Lrbss                       rbss         000000
__Lrdata                      rdata        000000
__Lreset_vec                  reset_vec    000000
__Lrparam                     rparam       000000
__Lsfr                        sfr          000000
__Lsmallconst                 smallconst   000000
__Lspace_0                    (abs)        000000
__Lspace_1                    (abs)        000000
__Lspace_2                    (abs)        000000
__Lstack                      stack        000000
__Lstruct                     struct       000000
__Ltemp                       temp         000000
__Ltext                       text         000000
__Ltext0                      text0        000000
__Ltext1                      text1        000000
__Ltext10                     text10       000000
__Ltext11                     text11       000000
__Ltext12                     text12       000000
__Ltext13                     text13       000000
__Ltext14                     text14       000000
__Ltext15                     text15       000000
__Ltext16                     text16       000000
__Ltext17                     text17       000000
__Ltext18                     text18       000000
__Ltext19                     text19       000000
__Ltext2                      text2        000000
__Ltext20                     text20       000000
__Ltext21                     text21       000000
__Ltext22                     text22       000000
__Ltext23                     text23       000000
__Ltext24                     text24       000000
__Ltext25                     text25       000000
__Ltext26                     text26       000000
__Ltext27                     text27       000000
__Ltext28                     text28       000000
__Ltext29                     text29       000000
__Ltext3                      text3        000000
__Ltext30                     text30       000000
__Ltext31                     text31       000000
__Ltext32                     text32       000000
__Ltext33                     text33       000000
__Ltext34                     text34       000000
__Ltext35                     text35       000000
__Ltext36                     text36       000000
__Ltext37                     text37       000000
__Ltext38                     text38       000000
__Ltext39                     text39       000000
__Ltext4                      text4        000000
__Ltext40                     text40       000000
__Ltext41                     text41       000000
__Ltext42                     text42       000000
__Ltext43                     text43       000000
__Ltext44                     text44       000000
__Ltext45                     text45       000000
__Ltext46                     text46       000000
__Ltext47                     text47       000000
__Ltext5                      text5        000000
__Ltext6                      text6        000000
__Ltext7                      text7        000000
__Ltext8                      text8        000000
__Ltext9                      text9        000000
__S0                          (abs)        30000E
__S1                          (abs)        00012E
__S2                          (abs)        000000
___aodiv                      text24       005FF2
___aodiv@counter              cstackCOMRAM 000011
___aodiv@dividend             cstackCOMRAM 000001
___aodiv@divisor              cstackCOMRAM 000009
___aodiv@quotient             cstackCOMRAM 000013
___aodiv@sign                 cstackCOMRAM 000012
___aomod                      text23       005E66
___aomod@counter              cstackCOMRAM 000011
___aomod@dividend             cstackCOMRAM 000001
___aomod@divisor              cstackCOMRAM 000009
___aomod@sign                 cstackCOMRAM 000012
___awdiv                      text35       005888
___awdiv@counter              cstackCOMRAM 000005
___awdiv@dividend             cstackCOMRAM 000001
___awdiv@divisor              cstackCOMRAM 000003
___awdiv@quotient             cstackCOMRAM 000007
___awdiv@sign                 cstackCOMRAM 000006
___fldiv                      text45       006A84
___fldiv@a                    cstackCOMRAM 000013
___fldiv@aexp                 cstackCOMRAM 000027
___fldiv@b                    cstackCOMRAM 00000F
___fldiv@bexp                 cstackCOMRAM 000026
___fldiv@grs                  cstackCOMRAM 000022
___fldiv@new_exp              cstackCOMRAM 000020
___fldiv@rem                  cstackCOMRAM 00001B
___fldiv@sign                 cstackCOMRAM 00001F
___flge                       text44       005CFE
___flge@ff1                   cstackCOMRAM 000001
___flge@ff2                   cstackCOMRAM 000005
___inthi_sp                   stack        000000
___intlo_sp                   stack        000000
___omul                       text32       004E90
___omul@multiplicand          cstackCOMRAM 000009
___omul@multiplier            cstackCOMRAM 000001
___omul@product               cstackCOMRAM 000011
___param_bank                 (abs)        000000
___rparam_used                (abs)        000001
___sp                         stack        000000
___xxtofl                     text43       00636E
___xxtofl@arg                 cstackCOMRAM 00000B
___xxtofl@exp                 cstackCOMRAM 00000A
___xxtofl@sign                cstackCOMRAM 000009
___xxtofl@val                 cstackCOMRAM 000001
__accesstop                   (abs)        000060
__activetblptr                (abs)        000002
__end_of_Font3x6              mediumconst  007FD8
__end_of_Font8x8              mediumconst  007B15
__end_of_Play_Music           text25       0052BA
__end_of_Trigger_Pulse_10us1  text47       004864
__end_of_Trigger_Pulse_10us2  text46       004872
__end_of___aodiv              text24       0061A2
__end_of___aomod              text23       005FF2
__end_of___awdiv              text35       005974
__end_of___fldiv              text45       006EA4
__end_of___flge               text44       005E66
__end_of___omul               text32       004F36
__end_of___xxtofl             text43       00654A
__end_of__initialization      cinit        004C30
__end_of_abs                  text22       004A58
__end_of_acceuil              mediumconst  007F15
__end_of_buzz                 text26       004856
__end_of_displayGameBegining  text36       0049D6
__end_of_displayScore         text12       004DF0
__end_of_drawBar              text7        005094
__end_of_drawDot              text4        005442
__end_of_dtoa                 text16       006A84
__end_of_eraseBar             text6        005148
__end_of_eraseDot             text11       00537E
__end_of_fputc                text20       0057A6
__end_of_fputs                text19       004AEE
__end_of_generateDot          text30       004AA2
__end_of_glcd_FillScreen      text41       005200
__end_of_glcd_Image           text29       005518
__end_of_glcd_Init            text28       004E90
__end_of_glcd_PlotPixel       text33       0056C8
__end_of_glcd_ReadByte        text34       00495E
__end_of_glcd_SetCursor       text40       004D6E
__end_of_glcd_WriteByte       text42       004998
__end_of_glcd_WriteChar3x6    text39       005CFE
__end_of_glcd_WriteChar8X8    text38       005BB2
__end_of_glcd_WriteString     text37       004FE0
__end_of_initGame             text10       004A14
__end_of_initMyPIC18F         text27       004B3E
__end_of_isBallCatch          text8        006766
__end_of_main                 text0        007314
__end_of_move                 text5        005A7E
__end_of_moveDot              text3        0048A4
__end_of_pad                  text17       0055EE
__end_of_putch                text21       00484A
__end_of_rand                 text31       005888
__end_of_scoreCounter         text9        0048CA
__end_of_sprintf              text13       004C98
__end_of_srand                text2        004928
__end_of_strlen               text18       004B90
__end_of_time                 text1        004BE4
__end_of_vfpfcnvrt            text15       00636E
__end_of_vfprintf             text14       004CFE
__initialization              cinit        004BE4
__mediumconst                 mediumconst  007314
__pbssBANK0                   bssBANK0     0000BC
__pcinit                      cinit        004BE4
__pcstackBANK0                cstackBANK0  000060
__pcstackCOMRAM               cstackCOMRAM 000001
__pdataBANK0                  dataBANK0    0000E8
__pdataBANK1                  dataBANK1    000100
__pidataBANK0                 idataBANK0   004872
__pidataBANK1                 idataBANK1   0048CA
__pmediumconst                mediumconst  007314
__pnvBANK0                    nvBANK0      0000F6
__ptext0                      text0        006EA4
__ptext1                      text1        004B90
__ptext10                     text10       0049D6
__ptext11                     text11       0052BA
__ptext12                     text12       004D6E
__ptext13                     text13       004C3A
__ptext14                     text14       004C98
__ptext15                     text15       0061A2
__ptext16                     text16       006766
__ptext17                     text17       005518
__ptext18                     text18       004B3E
__ptext19                     text19       004AA2
__ptext2                      text2        0048F8
__ptext20                     text20       0056C8
__ptext21                     text21       004848
__ptext22                     text22       004A14
__ptext23                     text23       005E66
__ptext24                     text24       005FF2
__ptext25                     text25       005200
__ptext26                     text26       00484A
__ptext27                     text27       004AEE
__ptext28                     text28       004DF0
__ptext29                     text29       005442
__ptext3                      text3        004880
__ptext30                     text30       004A58
__ptext31                     text31       0057A6
__ptext32                     text32       004E90
__ptext33                     text33       0055EE
__ptext34                     text34       004928
__ptext35                     text35       005888
__ptext36                     text36       004998
__ptext37                     text37       004F36
__ptext38                     text38       005A7E
__ptext39                     text39       005BB2
__ptext4                      text4        00537E
__ptext40                     text40       004CFE
__ptext41                     text41       005148
__ptext42                     text42       00495E
__ptext43                     text43       00636E
__ptext44                     text44       005CFE
__ptext45                     text45       006A84
__ptext46                     text46       004864
__ptext47                     text47       004856
__ptext5                      text5        005974
__ptext6                      text6        005094
__ptext7                      text7        004FE0
__ptext8                      text8        00654A
__ptext9                      text9        0048A4
__ramtop                      ramtop       000800
__size_of_Play_Music          (abs)        000000
__size_of_Trigger_Pulse_10us1 (abs)        000000
__size_of_Trigger_Pulse_10us2 (abs)        000000
__size_of___aodiv             (abs)        000000
__size_of___aomod             (abs)        000000
__size_of___awdiv             (abs)        000000
__size_of___fldiv             (abs)        000000
__size_of___flge              (abs)        000000
__size_of___omul              (abs)        000000
__size_of___xxtofl            (abs)        000000
__size_of_abs                 (abs)        000000
__size_of_buzz                (abs)        000000
__size_of_displayGameBegining (abs)        000000
__size_of_displayScore        (abs)        000000
__size_of_drawBar             (abs)        000000
__size_of_drawDot             (abs)        000000
__size_of_dtoa                (abs)        000000
__size_of_eraseBar            (abs)        000000
__size_of_eraseDot            (abs)        000000
__size_of_fputc               (abs)        000000
__size_of_fputs               (abs)        000000
__size_of_generateDot         (abs)        000000
__size_of_glcd_FillScreen     (abs)        000000
__size_of_glcd_Image          (abs)        000000
__size_of_glcd_Init           (abs)        000000
__size_of_glcd_PlotPixel      (abs)        000000
__size_of_glcd_ReadByte       (abs)        000000
__size_of_glcd_SetCursor      (abs)        000000
__size_of_glcd_WriteByte      (abs)        000000
__size_of_glcd_WriteChar3x6   (abs)        000000
__size_of_glcd_WriteChar8X8   (abs)        000000
__size_of_glcd_WriteString    (abs)        000000
__size_of_initGame            (abs)        000000
__size_of_initMyPIC18F        (abs)        000000
__size_of_isBallCatch         (abs)        000000
__size_of_main                (abs)        000000
__size_of_move                (abs)        000000
__size_of_moveDot             (abs)        000000
__size_of_pad                 (abs)        000000
__size_of_putch               (abs)        000000
__size_of_rand                (abs)        000000
__size_of_scoreCounter        (abs)        000000
__size_of_sprintf             (abs)        000000
__size_of_srand               (abs)        000000
__size_of_strlen              (abs)        000000
__size_of_time                (abs)        000000
__size_of_vfpfcnvrt           (abs)        000000
__size_of_vfprintf            (abs)        000000
__smallconst                  smallconst   000000
_abs                          text22       004A14
_acceuil                      mediumconst  007B15
_baseball                     dataBANK0    0000EF
_baseball_r                   dataBANK0    0000E8
_buzz                         text26       00484A
_buzzer_delay                 bssBANK0     0000C4
_champion                     dataBANK1    000117
_champion_r                   dataBANK1    000100
_dbuf                         bssBANK0     0000C8
_displayGameBegining          text36       004998
_displayScore                 text12       004D6E
_drawBar                      text7        004FE0
_drawDot                      text4        00537E
_dtoa                         text16       006766
_dtoa$727                     cstackCOMRAM 00002E
_eraseBar                     text6        005094
_eraseDot                     text11       0052BA
_flags                        bssBANK0     0000C2
_fputc                        text20       0056C8
_fputs                        text19       004AA2
_generateDot                  text30       004A58
_glcd_FillScreen              text41       005148
_glcd_Image                   text29       005442
_glcd_Init                    text28       004DF0
_glcd_PlotPixel               text33       0055EE
_glcd_ReadByte                text34       004928
_glcd_SetCursor               text40       004CFE
_glcd_WriteByte               text42       00495E
_glcd_WriteChar3x6            text39       005BB2
_glcd_WriteChar8X8            text38       005A7E
_glcd_WriteString             text37       004F36
_initGame                     text10       0049D6
_initMyPIC18F                 text27       004AEE
_isBallCatch                  text8        00654A
_main                         text0        006EA4
_move                         text5        005974
_moveDot                      text3        004880
_nout                         bssBANK0     0000BC
_pad                          text17       005518
_prec                         bssBANK0     0000C0
_putch                        text21       004848
_rand                         text31       0057A6
_scoreCounter                 text9        0048A4
_seed                         nvBANK0      0000F6
_sprintf                      text13       004C3A
_srand                        text2        0048F8
_strlen                       text18       004B3E
_time                         text1        004B90
_vfpfcnvrt                    text15       0061A2
_vfprintf                     text14       004C98
_width                        bssBANK0     0000BE
_x                            bssBANK0     0000C7
_y                            bssBANK0     0000C6
abs@a                         cstackCOMRAM 000013
buzz@delay                    cstackCOMRAM 000001
displayScore@counter          cstackCOMRAM 00005E
displayScore@score            cstackBANK0  00006C
drawBar@i                     cstackCOMRAM 00002C
drawBar@j                     cstackCOMRAM 00002E
drawBar@x                     cstackCOMRAM 00002A
drawDot@i                     cstackCOMRAM 00002E
drawDot@j                     cstackCOMRAM 000030
drawDot@x                     cstackCOMRAM 00002A
drawDot@y                     cstackCOMRAM 00002C
dtoa@d                        cstackCOMRAM 00001E
dtoa@fp                       cstackCOMRAM 00001C
dtoa@i                        cstackCOMRAM 00003E
dtoa@n                        cstackCOMRAM 000036
dtoa@p                        cstackCOMRAM 000030
dtoa@s                        cstackCOMRAM 000034
dtoa@w                        cstackCOMRAM 000032
end_of_initialization         cinit        004C30
eraseBar@i                    cstackCOMRAM 00002C
eraseBar@j                    cstackCOMRAM 00002E
eraseBar@x                    cstackCOMRAM 00002A
eraseDot@i                    cstackCOMRAM 00002E
eraseDot@j                    cstackCOMRAM 000030
eraseDot@x                    cstackCOMRAM 00002A
eraseDot@y                    cstackCOMRAM 00002C
fputc@c                       cstackCOMRAM 000001
fputc@fp                      cstackCOMRAM 000003
fputs@c                       cstackCOMRAM 00000E
fputs@fp                      cstackCOMRAM 00000C
fputs@i                       cstackCOMRAM 00000F
fputs@s                       cstackCOMRAM 00000A
generateDot@turn              cstackCOMRAM 00002E
generateDot@x                 cstackCOMRAM 00002A
generateDot@y                 cstackCOMRAM 00002C
glcd_FillScreen@color         cstackCOMRAM 00000B
glcd_FillScreen@i             cstackCOMRAM 00000D
glcd_FillScreen@j             cstackCOMRAM 00000C
glcd_Image@cs                 cstackCOMRAM 00000F
glcd_Image@i                  cstackCOMRAM 00000E
glcd_Image@j                  cstackCOMRAM 00000D
glcd_Image@ptr                cstackCOMRAM 00000B
glcd_Init@mode                cstackCOMRAM 00000E
glcd_PlotPixel@color          cstackCOMRAM 000024
glcd_PlotPixel@data           cstackCOMRAM 000028
glcd_PlotPixel@side           cstackCOMRAM 000029
glcd_PlotPixel@xpos           cstackCOMRAM 000027
glcd_PlotPixel@ypos           cstackCOMRAM 000023
glcd_ReadByte@data            cstackCOMRAM 000002
glcd_ReadByte@side            cstackCOMRAM 000001
glcd_SetCursor@side           cstackCOMRAM 00000C
glcd_SetCursor@xpos           cstackCOMRAM 00000D
glcd_SetCursor@ypos           cstackCOMRAM 00000B
glcd_WriteByte@data           cstackCOMRAM 000009
glcd_WriteByte@side           cstackCOMRAM 00000A
glcd_WriteChar3x6@ch          cstackCOMRAM 00000F
glcd_WriteChar3x6@color       cstackCOMRAM 00000B
glcd_WriteChar3x6@i           cstackCOMRAM 000010
glcd_WriteChar3x6@side        cstackCOMRAM 000011
glcd_WriteChar3x6@xpos        cstackCOMRAM 00000E
glcd_WriteChar8X8@ch          cstackCOMRAM 000010
glcd_WriteChar8X8@chr         cstackCOMRAM 00000E
glcd_WriteChar8X8@color       cstackCOMRAM 00000B
glcd_WriteChar8X8@i           cstackCOMRAM 000012
glcd_WriteChar8X8@side        cstackCOMRAM 000013
glcd_WriteChar8X8@xpos        cstackCOMRAM 000011
glcd_WriteString@color        cstackCOMRAM 000017
glcd_WriteString@font         cstackCOMRAM 000016
glcd_WriteString@str          cstackCOMRAM 000014
initGame@barX                 cstackCOMRAM 000036
initGame@counter              cstackCOMRAM 000038
initGame@x                    cstackCOMRAM 000032
initGame@y                    cstackCOMRAM 000034
intlevel0                     text         000000
intlevel1                     text         000000
intlevel2                     text         000000
intlevel3                     text         000000
isBallCatch@ballBeginX        cstackBANK0  000084
isBallCatch@ballEndX          cstackBANK0  000086
isBallCatch@ballEndY          cstackBANK0  000088
isBallCatch@barBeginX         cstackBANK0  000080
isBallCatch@barEndX           cstackBANK0  000082
isBallCatch@barX              cstackBANK0  00007A
isBallCatch@counter           cstackBANK0  00007C
isBallCatch@i                 cstackBANK0  00008A
isBallCatch@x                 cstackBANK0  000076
isBallCatch@y                 cstackBANK0  000078
main@Distance1                cstackBANK0  00009C
main@Distance2                cstackBANK0  0000A0
main@Time1                    cstackBANK0  000094
main@Time2                    cstackBANK0  000096
main@ballX                    cstackBANK0  0000B6
main@ballY                    cstackBANK0  0000B8
main@barX                     cstackBANK0  000098
main@captor1                  cstackBANK0  0000A8
main@captor1Activated         cstackBANK0  0000B2
main@captor2                  cstackBANK0  0000AA
main@captor2Activated         cstackBANK0  0000B4
main@counter                  cstackBANK0  0000AE
main@counterValue             cstackBANK0  0000AC
main@loop                     cstackBANK0  0000A4
main@ptTurn                   cstackBANK0  00009A
main@turn                     cstackBANK0  0000A6
main@x                        cstackBANK0  0000BA
main@yValue                   cstackBANK0  0000B0
move@captor1                  cstackCOMRAM 000032
move@captor2                  cstackCOMRAM 000034
move@x                        cstackCOMRAM 000030
moveDot@x                     cstackCOMRAM 000032
moveDot@y                     cstackCOMRAM 000034
pad@buf                       cstackCOMRAM 000013
pad@fp                        cstackCOMRAM 000011
pad@i                         cstackCOMRAM 000018
pad@p                         cstackCOMRAM 000015
pad@w                         cstackCOMRAM 00001A
scoreCounter@counter          cstackCOMRAM 000001
scoreCounter@value            cstackCOMRAM 000003
sprintf@ap                    cstackBANK0  000062
sprintf@f                     cstackBANK0  000064
sprintf@fmt                   cstackCOMRAM 00005A
sprintf@ret                   cstackBANK0  000060
sprintf@s                     cstackCOMRAM 000058
srand@s                       cstackCOMRAM 000009
stackhi                       (abs)        0007FF
stacklo                       (abs)        00012E
start                         init         000000
start_initialization          cinit        004BE4
strlen@a                      cstackCOMRAM 000005
strlen@s                      cstackCOMRAM 000001
time@t                        cstackCOMRAM 000001
vfpfcnvrt@ap                  cstackCOMRAM 000044
vfpfcnvrt@fmt                 cstackCOMRAM 000042
vfpfcnvrt@fp                  cstackCOMRAM 000040
vfpfcnvrt@ll                  cstackCOMRAM 000048
vfprintf@ap                   cstackCOMRAM 000054
vfprintf@cfmt                 cstackCOMRAM 000056
vfprintf@fmt                  cstackCOMRAM 000052
vfprintf@fp                   cstackCOMRAM 000050


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 29 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  Distance2       4   64[BANK0 ] float 
  Distance1       4   60[BANK0 ] float 
  x               2   90[BANK0 ] int 
  ballY           2   88[BANK0 ] PTR int 
		 -> main@yValue(2), 
  ballX           2   86[BANK0 ] PTR int 
		 -> NULL(0), 
  captor2Activ    2   84[BANK0 ] PTR int 
		 -> main@captor2(2), 
  captor1Activ    2   82[BANK0 ] PTR int 
		 -> main@captor1(2), 
  yValue          2   80[BANK0 ] int 
  counter         2   78[BANK0 ] PTR int 
		 -> main@counterValue(2), 
  counterValue    2   76[BANK0 ] int 
  captor2         2   74[BANK0 ] int 
  captor1         2   72[BANK0 ] int 
  turn            2   70[BANK0 ] int 
  loop            2   68[BANK0 ] int 
  ptTurn          2   58[BANK0 ] PTR int 
		 -> main@turn(2), 
  barX            2   56[BANK0 ] PTR int 
		 -> main@x(2), 
  Time2           2   54[BANK0 ] int 
  Time1           2   52[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0      40       0       0       0       0       0       0       0
      Temps:          0       8       0       0       0       0       0       0       0
      Totals:         0      48       0       0       0       0       0       0       0
Total ram usage:       48 bytes
 Hardware stack levels required when called:   10
 This function calls:
		_Play_Music
		_Trigger_Pulse_10us1
		_Trigger_Pulse_10us2
		___fldiv
		___flge
		___xxtofl
		_displayGameBegining
		_displayScore
		_drawBar
		_drawDot
		_eraseDot
		_generateDot
		_glcd_Image
		_glcd_Init
		_initMyPIC18F
		_isBallCatch
		_move
		_moveDot
		_srand
		_time
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _time *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\time.c"
 Parameters:    Size  Location     Type
  t               2    0[COMRAM] PTR long long 
		 -> NULL(0), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  8    0[COMRAM] long long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _srand *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\rand.c"
 Parameters:    Size  Location     Type
  s               2    8[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _moveDot *****************
 Defined at:
		line 104 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   49[COMRAM] PTR int 
		 -> NULL(0), 
  y               2   51[COMRAM] PTR int 
		 -> main@yValue(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_drawDot
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _drawDot *****************
 Defined at:
		line 78 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   41[COMRAM] PTR int 
		 -> NULL(0), 
  y               2   43[COMRAM] PTR int 
		 -> main@yValue(2), 
 Auto vars:     Size  Location     Type
  j               2   47[COMRAM] int 
  i               2   45[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_PlotPixel
 This function is called by:
		_main
		_moveDot
 This function uses a non-reentrant model


 *************** function _move *****************
 Defined at:
		line 15 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   47[COMRAM] int 
  captor1         2   49[COMRAM] PTR int 
		 -> main@captor1(2), 
  captor2         2   51[COMRAM] PTR int 
		 -> main@captor2(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   47[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_drawBar
		_eraseBar
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _eraseBar *****************
 Defined at:
		line 57 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   41[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   45[COMRAM] int 
  i               2   43[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_PlotPixel
 This function is called by:
		_move
 This function uses a non-reentrant model


 *************** function _drawBar *****************
 Defined at:
		line 44 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   41[COMRAM] int 
 Auto vars:     Size  Location     Type
  j               2   45[COMRAM] int 
  i               2   43[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_PlotPixel
 This function is called by:
		_main
		_move
 This function uses a non-reentrant model


 *************** function _isBallCatch *****************
 Defined at:
		line 160 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   22[BANK0 ] PTR int 
		 -> NULL(0), 
  y               2   24[BANK0 ] PTR int 
		 -> main@yValue(2), 
  barX            2   26[BANK0 ] PTR int 
		 -> main@x(2), 
  counter         2   28[BANK0 ] PTR int 
		 -> main@counterValue(2), 
 Auto vars:     Size  Location     Type
  i               2   42[BANK0 ] int 
  ballEndY        2   40[BANK0 ] int 
  ballEndX        2   38[BANK0 ] int 
  ballBeginX      2   36[BANK0 ] int 
  barEndX         2   34[BANK0 ] int 
  barBeginX       2   32[BANK0 ] int 
 Return value:  Size  Location     Type
                  2   22[BANK0 ] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       8       0       0       0       0       0       0       0
      Locals:         0      12       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0
      Totals:         0      22       0       0       0       0       0       0       0
Total ram usage:       22 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    9
 This function calls:
		_Play_Music
		_displayScore
		_glcd_FillScreen
		_glcd_PlotPixel
		_glcd_SetCursor
		_glcd_WriteString
		_initGame
		_scoreCounter
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _scoreCounter *****************
 Defined at:
		line 111 in file "game.c"
 Parameters:    Size  Location     Type
  counter         2    0[COMRAM] PTR int 
		 -> main@counterValue(2), 
 Auto vars:     Size  Location     Type
  value           2    2[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isBallCatch
 This function uses a non-reentrant model


 *************** function _initGame *****************
 Defined at:
		line 135 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   49[COMRAM] PTR int 
		 -> NULL(0), 
  y               2   51[COMRAM] PTR int 
		 -> main@yValue(2), 
  barX            2   53[COMRAM] PTR int 
		 -> main@x(2), 
  counter         2   55[COMRAM] PTR int 
		 -> main@counterValue(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_eraseDot
 This function is called by:
		_isBallCatch
 This function uses a non-reentrant model


 *************** function _eraseDot *****************
 Defined at:
		line 91 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   41[COMRAM] PTR int 
		 -> NULL(0), 
  y               2   43[COMRAM] PTR int 
		 -> main@yValue(2), 
 Auto vars:     Size  Location     Type
  j               2   47[COMRAM] int 
  i               2   45[COMRAM] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_PlotPixel
 This function is called by:
		_main
		_initGame
 This function uses a non-reentrant model


 *************** function _displayScore *****************
 Defined at:
		line 119 in file "game.c"
 Parameters:    Size  Location     Type
  counter         2   93[COMRAM] PTR int 
		 -> main@counterValue(2), 
 Auto vars:     Size  Location     Type
  score          10   12[BANK0 ] unsigned char [10]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0      10       0       0       0       0       0       0       0
      Temps:          0       2       0       0       0       0       0       0       0
      Totals:         2      12       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    8
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
		_sprintf
 This function is called by:
		_main
		_isBallCatch
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
 Parameters:    Size  Location     Type
  s               2   87[COMRAM] PTR unsigned char 
		 -> displayScore@score(10), 
  fmt             2   89[COMRAM] PTR const unsigned char 
		 -> STR_2(3), 
 Auto vars:     Size  Location     Type
  f               6    4[BANK0 ] struct _IO_FILE
  ap              2    2[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  ret             2    0[BANK0 ] int 
 Return value:  Size  Location     Type
                  2   87[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0      10       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6      10       0       0       0       0       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_vfprintf
 This function is called by:
		_displayScore
 This function uses a non-reentrant model


 *************** function _vfprintf *****************
 Defined at:
		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   79[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  fmt             2   81[COMRAM] PTR const unsigned char 
		 -> STR_2(3), 
  ap              2   83[COMRAM] PTR PTR void 
		 -> sprintf@ap(2), 
 Auto vars:     Size  Location     Type
  cfmt            2   85[COMRAM] PTR unsigned char 
		 -> STR_2(3), 
 Return value:  Size  Location     Type
                  2   79[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_vfpfcnvrt
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _vfpfcnvrt *****************
 Defined at:
		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   63[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  fmt             2   65[COMRAM] PTR PTR unsigned char 
		 -> vfprintf@cfmt(2), 
  ap              2   67[COMRAM] PTR PTR void 
		 -> sprintf@ap(2), 
 Auto vars:     Size  Location     Type
  ll              8   71[COMRAM] long long 
  llu             8    0        unsigned long long 
  f               4    0        unsigned long long 
  vp              3    0        PTR void 
  ct              3    0        unsigned char [3]
  cp              3    0        PTR unsigned char 
  i               2    0        int 
  done            2    0        int 
  c               1    0        unsigned char 
 Return value:  Size  Location     Type
                  2   63[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:        16       0       0       0       0       0       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_dtoa
		_fputc
 This function is called by:
		_vfprintf
 This function uses a non-reentrant model


 *************** function _dtoa *****************
 Defined at:
		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   27[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  d               8   29[COMRAM] long long 
 Auto vars:     Size  Location     Type
  n               8   53[COMRAM] long long 
  i               2   61[COMRAM] int 
  s               2   51[COMRAM] int 
  w               2   49[COMRAM] int 
  p               2   47[COMRAM] int 
 Return value:  Size  Location     Type
                  2   27[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        10       0       0       0       0       0       0       0       0
      Locals:        18       0       0       0       0       0       0       0       0
      Temps:          8       0       0       0       0       0       0       0       0
      Totals:        36       0       0       0       0       0       0       0       0
Total ram usage:       36 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___aodiv
		___aomod
		_abs
		_pad
 This function is called by:
		_vfpfcnvrt
 This function uses a non-reentrant model


 *************** function _pad *****************
 Defined at:
		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
 Parameters:    Size  Location     Type
  fp              2   16[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
  buf             2   18[COMRAM] PTR unsigned char 
		 -> dbuf(32), 
  p               2   20[COMRAM] int 
 Auto vars:     Size  Location     Type
  w               2   25[COMRAM] int 
  i               2   23[COMRAM] int 
 Return value:  Size  Location     Type
                  2   16[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_fputc
		_fputs
		_strlen
 This function is called by:
		_dtoa
 This function uses a non-reentrant model


 *************** function _strlen *****************
 Defined at:
		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
 Parameters:    Size  Location     Type
  s               2    0[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
 Auto vars:     Size  Location     Type
  a               2    4[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
 Return value:  Size  Location     Type
                  2    0[COMRAM] unsigned int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_pad
 This function uses a non-reentrant model


 *************** function _fputs *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
 Parameters:    Size  Location     Type
  s               2    9[COMRAM] PTR const unsigned char 
		 -> dbuf(32), 
  fp              2   11[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
 Auto vars:     Size  Location     Type
  i               2   14[COMRAM] int 
  c               1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    9[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_fputc
 This function is called by:
		_pad
 This function uses a non-reentrant model


 *************** function _fputc *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
 Parameters:    Size  Location     Type
  c               2    0[COMRAM] int 
  fp              2    2[COMRAM] PTR struct _IO_FILE
		 -> sprintf@f(6), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_putch
 This function is called by:
		_pad
		_vfpfcnvrt
		_fputs
 This function uses a non-reentrant model


 *************** function _putch *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_fputc
 This function uses a non-reentrant model


 *************** function _abs *****************
 Defined at:
		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 Parameters:    Size  Location     Type
  a               2   18[COMRAM] int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   18[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_dtoa
 This function uses a non-reentrant model


 *************** function ___aomod *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
 Parameters:    Size  Location     Type
  dividend        8    0[COMRAM] long long 
  divisor         8    8[COMRAM] long long 
 Auto vars:     Size  Location     Type
  sign            1   17[COMRAM] unsigned char 
  counter         1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  8    0[COMRAM] long long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        16       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        18       0       0       0       0       0       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_dtoa
 This function uses a non-reentrant model


 *************** function ___aodiv *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
 Parameters:    Size  Location     Type
  dividend        8    0[COMRAM] long long 
  divisor         8    8[COMRAM] long long 
 Auto vars:     Size  Location     Type
  quotient        8   18[COMRAM] long long 
  sign            1   17[COMRAM] unsigned char 
  counter         1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  8    0[COMRAM] long long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        16       0       0       0       0       0       0       0       0
      Locals:        10       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        26       0       0       0       0       0       0       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_dtoa
 This function uses a non-reentrant model


 *************** function _Play_Music *****************
 Defined at:
		line 28 in file "sound.c"
 Parameters:    Size  Location     Type
  tab             2    2[COMRAM] PTR unsigned char 
		 -> baseball(7), champion(23), 
  r               2    4[COMRAM] PTR unsigned char 
		 -> baseball_r(7), champion_r(23), 
  size            1    6[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  j               2   10[COMRAM] unsigned int 
  delay           2    8[COMRAM] unsigned short 
  i               1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         5       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:        11       0       0       0       0       0       0       0       0
Total ram usage:       11 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_buzz
 This function is called by:
		_main
		_isBallCatch
 This function uses a non-reentrant model


 *************** function _buzz *****************
 Defined at:
		line 3 in file "sound.c"
 Parameters:    Size  Location     Type
  delay           2    0[COMRAM] unsigned short 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Play_Music
		_init_buzzer
 This function uses a non-reentrant model


 *************** function _initMyPIC18F *****************
 Defined at:
		line 4 in file "init1.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_Init *****************
 Defined at:
		line 400 in file "glcd.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_FillScreen
		_glcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_Image *****************
 Defined at:
		line 498 in file "glcd.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ptr             2   10[COMRAM] int 
  cs              1   14[COMRAM] unsigned char 
  i               1   13[COMRAM] unsigned char 
  j               1   12[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         5       0       0       0       0       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _generateDot *****************
 Defined at:
		line 70 in file "game.c"
 Parameters:    Size  Location     Type
  x               2   41[COMRAM] PTR int 
		 -> NULL(0), 
  y               2   43[COMRAM] PTR int 
		 -> main@yValue(2), 
  turn            2   45[COMRAM] PTR int 
		 -> main@turn(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         6       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_PlotPixel
		_rand
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   24[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          8       0       0       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___omul
 This function is called by:
		_generateDot
 This function uses a non-reentrant model


 *************** function ___omul *****************
 Defined at:
		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul64.c"
 Parameters:    Size  Location     Type
  multiplier      8    0[COMRAM] unsigned long long 
  multiplicand    8    8[COMRAM] unsigned long long 
 Auto vars:     Size  Location     Type
  product         8   16[COMRAM] unsigned long long 
 Return value:  Size  Location     Type
                  8    0[COMRAM] unsigned long long 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:        16       0       0       0       0       0       0       0       0
      Locals:         8       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:        24       0       0       0       0       0       0       0       0
Total ram usage:       24 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function _glcd_PlotPixel *****************
 Defined at:
		line 569 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   34[COMRAM] unsigned char 
  color           1   35[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   38[COMRAM] unsigned char 
  side            1   40[COMRAM] unsigned char 
  data            1   39[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         2       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awdiv
		_glcd_ReadByte
		_glcd_WriteByte
 This function is called by:
		_drawBar
		_eraseBar
		_generateDot
		_drawDot
		_eraseDot
		_isBallCatch
 This function uses a non-reentrant model


 *************** function _glcd_ReadByte *****************
 Defined at:
		line 533 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  side            1    0[COMRAM] unsigned char 
  data            1    1[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[COMRAM] int 
  divisor         2    2[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2    6[COMRAM] int 
  sign            1    5[COMRAM] unsigned char 
  counter         1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_PlotPixel
 This function uses a non-reentrant model


 *************** function _displayGameBegining *****************
 Defined at:
		line 6 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_glcd_FillScreen
		_glcd_SetCursor
		_glcd_WriteString
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _glcd_WriteString *****************
 Defined at:
		line 727 in file "glcd.c"
 Parameters:    Size  Location     Type
  str             2   19[COMRAM] PTR unsigned char 
		 -> STR_4(14), STR_3(7), displayScore@score(10), STR_1(15), 
  font            1   21[COMRAM] unsigned char 
  color           1   22[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_glcd_WriteChar3x6
		_glcd_WriteChar8X8
 This function is called by:
		_displayGameBegining
		_displayScore
		_isBallCatch
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar8X8 *****************
 Defined at:
		line 634 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   15[COMRAM] unsigned char 
  chr             2   13[COMRAM] unsigned int 
  side            1   18[COMRAM] unsigned char 
  i               1   17[COMRAM] unsigned char 
  xpos            1   16[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_WriteChar3x6 *****************
 Defined at:
		line 682 in file "glcd.c"
 Parameters:    Size  Location     Type
  ch              1    wreg     unsigned char 
  color           1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  ch              1   14[COMRAM] unsigned char 
  side            1   16[COMRAM] unsigned char 
  i               1   15[COMRAM] unsigned char 
  xpos            1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         7       0       0       0       0       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_glcd_WriteString
 This function uses a non-reentrant model


 *************** function _glcd_SetCursor *****************
 Defined at:
		line 608 in file "glcd.c"
 Parameters:    Size  Location     Type
  xpos            1    wreg     unsigned char 
  ypos            1   10[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  xpos            1   12[COMRAM] unsigned char 
  side            1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_displayGameBegining
		_displayScore
		_isBallCatch
 This function uses a non-reentrant model


 *************** function _glcd_FillScreen *****************
 Defined at:
		line 474 in file "glcd.c"
 Parameters:    Size  Location     Type
  color           1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  color           1   10[COMRAM] unsigned char 
  i               1   12[COMRAM] unsigned char 
  j               1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_glcd_WriteByte
 This function is called by:
		_displayGameBegining
		_displayScore
		_isBallCatch
		_glcd_Init
 This function uses a non-reentrant model


 *************** function _glcd_WriteByte *****************
 Defined at:
		line 440 in file "glcd.c"
 Parameters:    Size  Location     Type
  side            1    wreg     unsigned char 
  data            1    8[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  side            1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_glcd_Init
		_glcd_FillScreen
		_glcd_Image
		_glcd_PlotPixel
		_glcd_SetCursor
		_glcd_WriteChar8X8
		_glcd_WriteChar3x6
 This function uses a non-reentrant model


 *************** function ___xxtofl *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c"
 Parameters:    Size  Location     Type
  sign            1    wreg     unsigned char 
  val             4    0[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1    8[COMRAM] unsigned char 
  arg             4   10[COMRAM] unsigned long 
  exp             1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        14       0       0       0       0       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___flge *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c"
 Parameters:    Size  Location     Type
  ff1             4    0[COMRAM] unsigned char 
  ff2             4    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___fldiv *****************
 Defined at:
		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c"
 Parameters:    Size  Location     Type
  b               4   14[COMRAM] unsigned char 
  a               4   18[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  grs             4   33[COMRAM] unsigned long 
  rem             4   26[COMRAM] unsigned long 
  new_exp         2   31[COMRAM] short 
  aexp            1   38[COMRAM] unsigned char 
  bexp            1   37[COMRAM] unsigned char 
  sign            1   30[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   14[COMRAM] unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         8       0       0       0       0       0       0       0       0
      Locals:        13       0       0       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0       0       0
      Totals:        25       0       0       0       0       0       0       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Trigger_Pulse_10us2 *****************
 Defined at:
		line 152 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Trigger_Pulse_10us1 *****************
 Defined at:
		line 145 in file "game.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c
		___aomod       		CODE           	5E66	0000	397

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c estimated size: 397

init1.c
		_initMyPIC18F  		CODE           	4AEE	0000	81

init1.c estimated size: 81

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c
		___fldiv       		CODE           	6A84	0000	1057

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\sprcdiv.c estimated size: 1057

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c
		___xxtofl      		CODE           	636E	0000	477

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\xxtofl.c estimated size: 477

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c
		_putch         		CODE           	4848	0000	3

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c estimated size: 3

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c
		_strlen        		CODE           	4B3E	0000	83

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c estimated size: 83

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c
		___flge        		CODE           	5CFE	0000	361

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\flge.c estimated size: 361

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c
		_fputc         		CODE           	56C8	0000	223

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c estimated size: 223

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\time.c
		_time          		CODE           	4B90	0000	85

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\time.c estimated size: 85

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c
		_abs           		CODE           	4A14	0000	69

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c estimated size: 69

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c
		_sprintf       		CODE           	4C3A	0000	95

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c estimated size: 95

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c
		___aodiv       		CODE           	5FF2	0000	433

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c estimated size: 433

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c
		_vfpfcnvrt     		CODE           	61A2	0000	461
		_pad           		CODE           	5518	0000	215
		_dtoa          		CODE           	6766	0000	799
		_vfprintf      		CODE           	4C98	0000	103

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c estimated size: 1578

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	5888	0000	237

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\awdiv.c estimated size: 237

shared
		_Font3x6       		MEDIUMCONST    	7F15	0000	196
		_Font8x8       		MEDIUMCONST    	7315	0000	2049
		__initialization		CODE           	4BE4	0000	77
		_acceuil       		MEDIUMCONST    	7B15	0000	1025

shared estimated size: 3347

game.c
		_moveDot       		CODE           	4880	0000	37
		_drawBar       		CODE           	4FE0	0000	181
		_Trigger_Pulse_10us1		CODE           	4856	0000	15
		_Trigger_Pulse_10us2		CODE           	4864	0000	15
		_displayGameBegining		CODE           	4998	0000	63
		_displayScore  		CODE           	4D6E	0000	131
		_move          		CODE           	5974	0000	267
		_eraseBar      		CODE           	5094	0000	181
		_generateDot   		CODE           	4A58	0000	75
		_initGame      		CODE           	49D6	0000	63
		_drawDot       		CODE           	537E	0000	197
		_isBallCatch   		CODE           	654A	0000	541
		_eraseDot      		CODE           	52BA	0000	197
		_scoreCounter  		CODE           	48A4	0000	39

game.c estimated size: 2002

glcd.c
		_glcd_SetCursor		CODE           	4CFE	0000	113
		_glcd_WriteString		CODE           	4F36	0000	171
		_glcd_WriteByte		CODE           	495E	0000	59
		_glcd_Init     		CODE           	4DF0	0000	161
		_glcd_ReadByte 		CODE           	4928	0000	55
		_glcd_WriteChar8X8		CODE           	5A7E	0000	309
		_glcd_FillScreen		CODE           	5148	0000	185
		_glcd_WriteChar3x6		CODE           	5BB2	0000	333
		_glcd_PlotPixel		CODE           	55EE	0000	219
		_glcd_Image    		CODE           	5442	0000	215

glcd.c estimated size: 1820

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\rand.c
		_srand         		CODE           	48F8	0000	49
		_rand          		CODE           	57A6	0000	227

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\rand.c estimated size: 276

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul64.c
		___omul        		CODE           	4E90	0000	167

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul64.c estimated size: 167

main.c
		_main          		CODE           	6EA4	0000	1137

main.c estimated size: 1137

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c
		_fputs         		CODE           	4AA2	0000	77

C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c estimated size: 77

sound.c
		_Play_Music    		CODE           	5200	0000	187
		_buzz          		CODE           	484A	0000	13

sound.c estimated size: 200

